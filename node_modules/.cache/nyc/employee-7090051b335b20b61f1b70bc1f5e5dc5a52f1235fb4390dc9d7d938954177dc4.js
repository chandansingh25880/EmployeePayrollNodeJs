function cov_1qu8xeq69r(){var path="F:\\Node-Project\\EmployeePayrollNodeJs\\app\\models\\employee.js";var hash="c012ba78a47ee12a5e36d220e4ad9543fb36dc59";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"F:\\Node-Project\\EmployeePayrollNodeJs\\app\\models\\employee.js",statementMap:{"0":{start:{line:1,column:17},end:{line:1,column:36}},"1":{start:{line:2,column:15},end:{line:2,column:32}},"2":{start:{line:4,column:23},end:{line:11,column:2}},"3":{start:{line:13,column:17},end:{line:13,column:59}},"4":{start:{line:22,column:13},end:{line:33,column:5}},"5":{start:{line:23,column:8},end:{line:23,column:36}},"6":{start:{line:24,column:25},end:{line:29,column:10}},"7":{start:{line:30,column:8},end:{line:32,column:11}},"8":{start:{line:31,column:12},end:{line:31,column:74}},"9":{start:{line:40,column:23},end:{line:44,column:5}},"10":{start:{line:41,column:8},end:{line:43,column:11}},"11":{start:{line:42,column:12},end:{line:42,column:74}},"12":{start:{line:51,column:17},end:{line:55,column:5}},"13":{start:{line:52,column:8},end:{line:54,column:10}},"14":{start:{line:53,column:12},end:{line:53,column:74}},"15":{start:{line:62,column:24},end:{line:66,column:5}},"16":{start:{line:63,column:8},end:{line:65,column:10}},"17":{start:{line:64,column:12},end:{line:64,column:62}},"18":{start:{line:73,column:17},end:{line:82,column:5}},"19":{start:{line:74,column:8},end:{line:81,column:11}},"20":{start:{line:80,column:12},end:{line:80,column:74}},"21":{start:{line:89,column:26},end:{line:96,column:5}},"22":{start:{line:90,column:8},end:{line:95,column:10}},"23":{start:{line:91,column:12},end:{line:93,column:13}},"24":{start:{line:92,column:16},end:{line:92,column:44}},"25":{start:{line:94,column:12},end:{line:94,column:91}},"26":{start:{line:99,column:0},end:{line:99,column:32}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:22,column:13},end:{line:22,column:14}},loc:{start:{line:22,column:37},end:{line:33,column:5}},line:22},"1":{name:"(anonymous_1)",decl:{start:{line:30,column:26},end:{line:30,column:27}},loc:{start:{line:30,column:43},end:{line:32,column:9}},line:30},"2":{name:"(anonymous_2)",decl:{start:{line:40,column:23},end:{line:40,column:24}},loc:{start:{line:40,column:37},end:{line:44,column:5}},line:40},"3":{name:"(anonymous_3)",decl:{start:{line:41,column:26},end:{line:41,column:27}},loc:{start:{line:41,column:43},end:{line:43,column:9}},line:41},"4":{name:"(anonymous_4)",decl:{start:{line:51,column:17},end:{line:51,column:18}},loc:{start:{line:51,column:48},end:{line:55,column:5}},line:51},"5":{name:"(anonymous_5)",decl:{start:{line:52,column:43},end:{line:52,column:44}},loc:{start:{line:52,column:60},end:{line:54,column:9}},line:52},"6":{name:"(anonymous_6)",decl:{start:{line:62,column:24},end:{line:62,column:25}},loc:{start:{line:62,column:50},end:{line:66,column:5}},line:62},"7":{name:"(anonymous_7)",decl:{start:{line:63,column:47},end:{line:63,column:48}},loc:{start:{line:63,column:56},end:{line:65,column:9}},line:63},"8":{name:"(anonymous_8)",decl:{start:{line:73,column:17},end:{line:73,column:18}},loc:{start:{line:73,column:52},end:{line:82,column:5}},line:73},"9":{name:"(anonymous_9)",decl:{start:{line:79,column:26},end:{line:79,column:27}},loc:{start:{line:79,column:43},end:{line:81,column:9}},line:79},"10":{name:"(anonymous_10)",decl:{start:{line:89,column:26},end:{line:89,column:27}},loc:{start:{line:89,column:53},end:{line:96,column:5}},line:89},"11":{name:"(anonymous_11)",decl:{start:{line:90,column:61},end:{line:90,column:62}},loc:{start:{line:90,column:78},end:{line:95,column:9}},line:90}},branchMap:{"0":{loc:{start:{line:31,column:19},end:{line:31,column:73}},type:"cond-expr",locations:[{start:{line:31,column:29},end:{line:31,column:50}},{start:{line:31,column:53},end:{line:31,column:73}}],line:31},"1":{loc:{start:{line:42,column:19},end:{line:42,column:73}},type:"cond-expr",locations:[{start:{line:42,column:29},end:{line:42,column:50}},{start:{line:42,column:53},end:{line:42,column:73}}],line:42},"2":{loc:{start:{line:53,column:19},end:{line:53,column:73}},type:"cond-expr",locations:[{start:{line:53,column:29},end:{line:53,column:50}},{start:{line:53,column:53},end:{line:53,column:73}}],line:53},"3":{loc:{start:{line:64,column:19},end:{line:64,column:61}},type:"cond-expr",locations:[{start:{line:64,column:29},end:{line:64,column:44}},{start:{line:64,column:47},end:{line:64,column:61}}],line:64},"4":{loc:{start:{line:80,column:19},end:{line:80,column:73}},type:"cond-expr",locations:[{start:{line:80,column:29},end:{line:80,column:50}},{start:{line:80,column:53},end:{line:80,column:73}}],line:80},"5":{loc:{start:{line:91,column:12},end:{line:93,column:13}},type:"if",locations:[{start:{line:91,column:12},end:{line:93,column:13}},{start:{line:91,column:12},end:{line:93,column:13}}],line:91},"6":{loc:{start:{line:94,column:19},end:{line:94,column:90}},type:"cond-expr",locations:[{start:{line:94,column:29},end:{line:94,column:67}},{start:{line:94,column:70},end:{line:94,column:90}}],line:94}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c012ba78a47ee12a5e36d220e4ad9543fb36dc59"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1qu8xeq69r=function(){return actualCoverage;};}return actualCoverage;}cov_1qu8xeq69r();const mongoose=(cov_1qu8xeq69r().s[0]++,require('mongoose'));const bcrypt=(cov_1qu8xeq69r().s[1]++,require('bcrypt'));const EmployeeSchema=(cov_1qu8xeq69r().s[2]++,mongoose.Schema({firstName:{type:String,required:true,validate:/^[a-zA-Z ]{3,30}$/},lastName:{type:String,required:true,validate:/^[a-zA-Z ]{3,30}$/},emailId:{type:String,required:true,validate:/^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9]+[.]+[a-zA-Z]+$/},password:{type:String,required:true}},{timestamps:false}));const Employee=(cov_1qu8xeq69r().s[3]++,mongoose.model('Employee',EmployeeSchema));class UserDetail{/*
    * @description Create method is to save the new Employee Data
    * @param userdData is data sent from Services
    * @return callback is used to callback the Services which  includes error msg or data
    */create=(cov_1qu8xeq69r().s[4]++,(userdata,callback)=>{cov_1qu8xeq69r().f[0]++;cov_1qu8xeq69r().s[5]++;console.log("creating data");const employee=(cov_1qu8xeq69r().s[6]++,new Employee({firstName:userdata.firstName,lastName:userdata.lastName,emailId:userdata.emailId,password:userdata.password}));cov_1qu8xeq69r().s[7]++;employee.save({},(error,data)=>{cov_1qu8xeq69r().f[1]++;cov_1qu8xeq69r().s[8]++;return error?(cov_1qu8xeq69r().b[0][0]++,callback(error,null)):(cov_1qu8xeq69r().b[0][1]++,callback(null,data));});});/*
    * @description retrive all the Employee Data from MongoDB
    * @param callback is data sent from Services
    * @return callback is used to callback Services with data or error message
    */findAllEmployees=(cov_1qu8xeq69r().s[9]++,callback=>{cov_1qu8xeq69r().f[2]++;cov_1qu8xeq69r().s[10]++;Employee.find({},(error,data)=>{cov_1qu8xeq69r().f[3]++;cov_1qu8xeq69r().s[11]++;return error?(cov_1qu8xeq69r().b[1][0]++,callback(error,null)):(cov_1qu8xeq69r().b[1][1]++,callback(null,data));});});/*
    * @description retrive all the Employee Data from MongoDB
    * @param objectId, callback is data sent from Service
    * @return callback is used to callback the Services with data or error message
    */findDataId=(cov_1qu8xeq69r().s[12]++,(employeObjectId,callback)=>{cov_1qu8xeq69r().f[4]++;cov_1qu8xeq69r().s[13]++;Employee.findById(employeObjectId,(error,data)=>{cov_1qu8xeq69r().f[5]++;cov_1qu8xeq69r().s[14]++;return error?(cov_1qu8xeq69r().b[2][0]++,callback(error,null)):(cov_1qu8xeq69r().b[2][1]++,callback(null,data));});});/*
    * @description delete the Employee Data from MongoDB
    * @param objectId, callback is data sent from Services
    * @return callback is used to callback Services with or without error message
    */deleteDataUsingId=(cov_1qu8xeq69r().s[15]++,(userDataID,callback)=>{cov_1qu8xeq69r().f[6]++;cov_1qu8xeq69r().s[16]++;Employee.findByIdAndRemove(userDataID,error=>{cov_1qu8xeq69r().f[7]++;cov_1qu8xeq69r().s[17]++;return error?(cov_1qu8xeq69r().b[3][0]++,callback(error)):(cov_1qu8xeq69r().b[3][1]++,callback(null));});});/*
    * @description Update the Registration_Data by Id
    * @param oldregistration_Id, New_UserData and callback
    * @return callback is used to callback Services with data or error message
    */updateById=(cov_1qu8xeq69r().s[18]++,(userId,newUserData,callback)=>{cov_1qu8xeq69r().f[8]++;cov_1qu8xeq69r().s[19]++;Employee.findByIdAndUpdate(userId,{firstName:newUserData.firstName,lastName:newUserData.lastName,email:newUserData.email,password:newUserData.password},{new:true},(error,data)=>{cov_1qu8xeq69r().f[9]++;cov_1qu8xeq69r().s[20]++;return error?(cov_1qu8xeq69r().b[4][0]++,callback(error,null)):(cov_1qu8xeq69r().b[4][1]++,callback(null,data));});});/*
    * @description Get the data by emailID
    * @param loginData having emailId and password
    * @return callback is used to callback Services with data or error message
    */checkLoginDetails=(cov_1qu8xeq69r().s[21]++,(credentials,callback)=>{cov_1qu8xeq69r().f[10]++;cov_1qu8xeq69r().s[22]++;Employee.findOne({"emailId":credentials.emailId},(error,data)=>{cov_1qu8xeq69r().f[11]++;cov_1qu8xeq69r().s[23]++;if(error){cov_1qu8xeq69r().b[5][0]++;cov_1qu8xeq69r().s[24]++;return callback(error,null);}else{cov_1qu8xeq69r().b[5][1]++;}cov_1qu8xeq69r().s[25]++;return!data?(cov_1qu8xeq69r().b[6][0]++,callback("UserId doesn't exist",null)):(cov_1qu8xeq69r().b[6][1]++,callback(null,data));});});}cov_1qu8xeq69r().s[26]++;module.exports=new UserDetail();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,